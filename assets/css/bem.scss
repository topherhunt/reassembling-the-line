// I'm really happy with this composable twist on BEM.
//
// The rules:
//   * An element's style must be scoped to the block.
//   * A modifier's style must be scoped to the block and element.
//   * Elements are flat, their styles may not be combined or nested even if they are
//     in fact nested in the DOM.
//
// The benefits:
//   * Same as BEM, minimizes risk of style pollution / conflicting class names.
//   * Unlike BEM, the DOM markup needed is very concise. Almost never need to repeat
//     block or element names. This also makes the DOM classes read more friendlily.
//   * Low risk of conflict with other style frameworks, e.g. should be easy to
//     adopt this pattern in an existing app without causing drama.
//
// Next idea: instead of __ and -- prefix, try `b-` prefix for blocks, `e-` prefix for
// elements, and `m-` prefix for modifiers. The same conventions would hold as above.

.b-codingPageVideo {
  display: block;
  width: 100%;
  height: 380px;
  background-color: #222;
}

.b-codingPageTimeline {
  position: relative;
  width: 100%;
  height: 200px;
  color: #fff;

  background-color: #222;
  background-image:
    repeating-linear-gradient(
      45deg,
      #222,
      #222 10px,
      #333 10px,
      #333 20px /* determines size */
    );

  .__zoomInWarning {
    position: absolute;
    top: 80px;
    left: 0px;
    width: 100%;
    text-align: center;
    color: #bbb;
  }

  // TODO: At some point, implement a scrollbar or force the OSX scrollbar to display.
  .__scrollContainer {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: scroll;
    ::-webkit-scrollbar {
      width: 15px; height: 15px;
    }
  }

  .__zoomControls {
    position: absolute;
    top: 5px;
    right: 5px;

    * { cursor: pointer; }
  }

  .__timeline {
    height: 100%;
    background-color: #242;
  }

  .__tickmarksContainter {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .__tickmark {
    position: absolute;
    top: 0px;
    // left is set dynamically
    width: 0px;
    border: 0.5px solid #000;

    &.--minor { height: 10px; border-color: rgba(255, 255, 255, 0.2); }
    &.--major { height: 15px; border-color: rgba(255, 255, 255, 0.4); }
  }

  .__tickLabel {
    position: absolute;
    top: 15px;
    // left is set dynamically
    text-align: center;
    font-size: 10px;
    background-color: rgba(0, 0, 0, 0.2);
    color: rgba(255, 255, 255, 0.5);

    &.--major { color: rgba(255, 255, 255, 0.8); }
  }

  .__cursorPrimary, .__cursorHover {
    position: absolute;
    bottom: 0px;
    // left is set dynamically
    height: 150px;
    width: 0px;
    border: 0.5px solid #000;
  }

  .__cursorPrimary { border-color: red; }

  .__cursorHover { border-color: rgba(255, 0, 0, 0.5); }

  .__selection {
    position: absolute;
    bottom: 0px;
    // left is set dynamically
    // width is set dynamically
    height: 150px;
    border-left: 1px dashed red;
    border-right: 1px dashed red;
    background-color: rgba(255, 0, 0, 0.2);
  }
}

//
// Shameful old styles
//

// OLD
.projectRow {
  padding: 5px;
  border: 1px solid #eee;
  border-radius: 5px;
}

// OLD
.projectRow__title {
  font-weight: bold;
}

// OLD
.formField__error {
  color: #a00;
  background-color: #fee;
  padding: 5px;
}
